{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/components/comment-count.js","webpack:///./src/pages/index.js"],"names":["Bio","data","useStaticQuery","author","site","siteMetadata","social","className","name","summary","href","github","src","alt","CommentCount","count","placeholder","BlogIndex","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","to","itemProp","date","xmlns","viewBox","fill","d","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"6FAAA,qCA6EeA,IAnEH,WAAO,IAAD,IACVC,EAAOC,yBAAe,cAoBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,yBAAKC,UAAU,QACZJ,aAAA,EAAAA,EAAQK,OACP,6BACE,2BACE,gCAASL,EAAOK,OAElB,4BAAIL,aAAA,EAAAA,EAAQM,UAAW,MACvB,yBAAKF,UAAU,mBACb,uBACEA,UAAU,mBACVG,KAAI,wBAAwBJ,aAAA,EAAAA,EAAQK,SAAR,KAE5B,yBAAKC,IAAI,oCAAoCC,IAAI,iB,kHC3ChDC,EAJM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAC7B,OAAOD,UAASC,GC+EHC,UAxEG,SAAC,GAAwB,IAAD,EAArBhB,EAAqB,EAArBA,KAAMiB,EAAe,EAAfA,SACnBC,GAAY,UAAAlB,EAAKG,KAAKC,oBAAV,eAAwBe,QAAxB,QACZC,EAAQpB,EAAKqB,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,kBAAC,IAAD,CAAQN,SAAUA,EAAUE,MAAOD,GACjC,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAAC,IAAD,MACA,yLAUJ,kBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOD,GACjC,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAAC,IAAD,MACA,wBAAIK,MAAO,CAAEC,UAAU,SACpBL,EAAMM,KAAI,SAAAC,GACT,IAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAEpD,OACE,wBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,6BACExB,UAAU,iBACV0B,WAAS,EACTC,SAAS,6BAET,gCACE,4BACE,kBAAC,OAAD,CAAMC,GAAIP,EAAKE,OAAOC,KAAMK,SAAS,OACnC,0BAAMA,SAAS,YAAYhB,KAG/B,yBAAKb,UAAU,eACb,+BAAQqB,EAAKC,YAAYQ,MACzB,yBACEC,MAAM,6BACN/B,UAAU,OACVgC,QAAQ,YACRC,KAAK,WAEL,0BAAMC,EAAE,8EACR,0BAAMA,EAAE,+GAEV,+BACE,kBAAC,EAAD,CAAczB,YAAa,WAIjC,iCACE,uBACE0B,wBAAyB,CACvBC,OAAQf,EAAKC,YAAYe,aAAehB,EAAKiB,SAE/CT,SAAS","file":"component---src-pages-index-js-d426a4880d4d6f8f8d4b.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            github\n            instagram\n            soundcloud\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      {author?.name && (\n        <div>\n          <p>\n            <strong>{author.name}</strong>\n          </p>\n          <p>{author?.summary || null}</p>\n          <div className=\"bio-social-link\">\n            <a\n              className=\"link-highlighter\"\n              href={`https://github.com/${social?.github || ``}`}\n            >\n              <img src=\"/social_logo/GitHub-Mark-32px.png\" alt=\"github\" />\n            </a>\n            {/* ·\n            <a href={`https://instagram.com/${social?.instagram || ``}`}>\n              <img\n                src=\"/social_logo/Instagram_Glyph_Gradient_RGB.png\"\n                alt=\"instagram\"\n              />\n            </a>\n            ·\n            <a href={`https://soundcloud.com/${social?.soundcloud || ``}`}>\n              <img\n                src=\"/social_logo/soundcloud_orange_transparent_32.png\"\n                alt=\"soundcloud\"\n              />\n            </a>\n            ·\n            <a\n              className=\"link-highlighter\"\n              href={`https://subsequent-motorcycle-de8.notion.site/78f84d8375a547e69b5a7e7c2ed3bc93`}\n            >\n              portfolio\n            </a> */}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","const CommentCount = ({ count, placeholder }) => {\n  return count ?? placeholder\n}\n\nexport default CommentCount\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport CommentCount from \"../components/comment-count\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"Home\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Home\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <div className=\"postPreview\">\n                    <small>{post.frontmatter.date}</small>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"icon\"\n                      viewBox=\"0 0 20 20\"\n                      fill=\"#B3B3B3\"\n                    >\n                      <path d=\"M2 5a2 2 0 012-2h7a2 2 0 012 2v4a2 2 0 01-2 2H9l-3 3v-3H4a2 2 0 01-2-2V5z\" />\n                      <path d=\"M15 7v2a4 4 0 01-4 4H9.828l-1.766 1.767c.28.149.599.233.938.233h2l3 3v-3h2a2 2 0 002-2V9a2 2 0 00-2-2h-1z\" />\n                    </svg>\n                    <small>\n                      <CommentCount placeholder={\"...\"} />\n                    </small>\n                  </div>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        id\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}