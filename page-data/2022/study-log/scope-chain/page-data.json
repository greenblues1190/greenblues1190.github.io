{"componentChunkName":"component---src-templates-blog-post-js","path":"/2022/study-log/scope-chain/","result":{"data":{"site":{"siteMetadata":{"title":"woo jeongmin","siteUrl":"https://woojeongmin.com"}},"markdownRemark":{"id":"3c44a638-1eb2-560a-99f7-a854f7fa007e","excerpt":"스코프란 무엇일까요? MDN…","html":"<p>스코프란 무엇일까요? MDN은 다음과 같이 설명합니다.</p>\n<blockquote>\n<p>현재 실행되는 컨텍스트를 말한다. 여기서 컨텍스트는 값과 표현식이 <strong>“표현”</strong>되거나 참조 될 수 있음을 의미한다. 만약 변수 또는 다른 표현식이 “해당 스코프”내에 있지 않다면 사용할 수 없다. 스코프는 또한 계층적인 구조를 가지기 때문에 하위 스코프는 상위 스코프에 접근할 수 있지만 반대는 불가하다.</p>\n</blockquote>\n<p>쉽게 말하자면 스코프는 변수에 접근할 수 있는 프로그램 상의 범위입니다. 자바스크립트 엔진은 스코프를 보고 변수의 접근 가능성을 결정합니다. 자바스크립트에는 3가지 종류의 스코프가 있습니다.</p>\n<h3 id=\"전역-스코프\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%97%AD-%EC%8A%A4%EC%BD%94%ED%94%84\" aria-label=\"전역 스코프 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전역 스코프</h3>\n<p>전역 스코프는 전역 네임스페이스에 선언된 변수 또는 함수가 가지는 스코프입니다.</p>\n<h3 id=\"지역함수-스코프\" style=\"position:relative;\"><a href=\"#%EC%A7%80%EC%97%AD%ED%95%A8%EC%88%98-%EC%8A%A4%EC%BD%94%ED%94%84\" aria-label=\"지역함수 스코프 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>지역/함수 스코프</h3>\n<p>함수 또는 메소드 내에 선언된 변수 또는 함수가 가지는 스코프입니다. ES6 이전에 자바스크립트에서 변수를 선언하는 방법은 한가지, 바로 <code class=\"language-text\">var</code> 키워드를 사용하는 것이었습니다. <code class=\"language-text\">var</code>를 사용하여 변수를 선언하는 자바스크립트는 다른 대부분의 프로그래밍 언어와 다른 동작 형태를 보입니다. 바로 변수가 함수 스코프를 가진다는 것이죠.</p>\n<p>변수가 함수 스코프를 가지면:</p>\n<ol>\n<li>함수 밖에서는 접근할 수 없습니다.</li>\n<li>함수 외의 블록은 스코프로 취급되지 않습니다. 즉, 조건문과 반복문 등의 블록에서도 같은 함수 내에 있다면 접근 가능합니다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"Woody\"</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'Woody'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"블록-스코프\" style=\"position:relative;\"><a href=\"#%EB%B8%94%EB%A1%9D-%EC%8A%A4%EC%BD%94%ED%94%84\" aria-label=\"블록 스코프 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>블록 스코프</h3>\n<p>ES6에서 추가된 <code class=\"language-text\">let</code>과 <code class=\"language-text\">const</code>는 <code class=\"language-text\">var</code>와는 달리 블록 스코프를 갖습니다. 블록 스코프에서는 어떤 블록이라도 스코프가 됩니다. 함수, 조건문, 반복문 등 모든 블록이 스코프로 취급됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"Woody\"</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'undefined'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>여러분은 이제 자바스크립트에서 스코프가 어떤 의미를 갖는지 알게 되었습니다! 그렇다면 스코프 체인이란 무엇일까요?</p>\n<h2 id=\"스코프-체인\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%EC%BD%94%ED%94%84-%EC%B2%B4%EC%9D%B8\" aria-label=\"스코프 체인 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스코프 체인</h2>\n<p>다시 한번 MDN의 스코프 문서를 읽어보면:</p>\n<blockquote>\n<p>스코프는 또한 계층적인 구조를 가지기 때문에 하위 스코프는 상위 스코프에 접근할 수 있지만 반대는 불가하다.</p>\n</blockquote>\n<p>이것이 스코프 체인입니다. 스코프 체인은 자바스크립트 코드에서 스코프가 어떻게 연결되어 있는지 정의합니다. 다음의 코드를 봅시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token string\">\"전역 x\"</span>\n<span class=\"token keyword\">var</span> z <span class=\"token operator\">=</span> <span class=\"token string\">\"전역 z\"</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">외부</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token string\">\"외부 y\"</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token comment\">// '전역 x'</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span> <span class=\"token comment\">// '외부 y'</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">내부</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token string\">\"내부 x\"</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token comment\">// '내부 x'</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span> <span class=\"token comment\">// '외부 y'</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span> <span class=\"token comment\">// '전역 z'</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">내부</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">외부</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token comment\">// '전역 x'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'Uncaught ReferenceError: y is not defined'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>함수 내부에 함수가 중첩되어 있어 상당히 복잡해 보이네요. 자바스크립트 엔진은 복잡한 스코프 사이에서 스코프 체인을 탐색하며 변수의 값을 평가합니다.</p>\n<p><code class=\"language-text\">내부</code> 함수에서 <code class=\"language-text\">x</code>, <code class=\"language-text\">y</code>, <code class=\"language-text\">z</code>의 값을 알기 위해서 자바스크립트 엔진은:</p>\n<ol>\n<li><code class=\"language-text\">내부</code> 함수 스코프에서 <code class=\"language-text\">x</code>, <code class=\"language-text\">y</code>, <code class=\"language-text\">z</code>의 값을 찾습니다. => <code class=\"language-text\">x = &quot;내부 x&quot;</code></li>\n<li><code class=\"language-text\">외부</code> 함수 스코프에서 <code class=\"language-text\">y</code>, <code class=\"language-text\">z</code>의 값을 찾습니다. => <code class=\"language-text\">y = &quot;외부 y&quot;</code></li>\n<li>전역 스코프에서 <code class=\"language-text\">z</code>의 값을 찾습니다. => <code class=\"language-text\">z = &quot;전역 z&quot;</code></li>\n</ol>\n<p>이처럼 변수는 존재하는 가장 가까운 상위 스코프의 값으로 평가됩니다. 만약 전역 스코프에서도 변수를 찾지 못하면 <code class=\"language-text\">ReferenceError</code>를 throw합니다.</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=PVYjfrgZhtU\">https://www.youtube.com/watch?v=PVYjfrgZhtU</a></li>\n<li><a href=\"https://github.com/getify/You-Dont-Know-JS/blob/8861041133f496edce0d03885e2e998d50c3414a/scope-closures/README.md\">https://github.com/getify/You-Dont-Know-JS/blob/8861041133f496edce0d03885e2e998d50c3414a/scope-closures/README.md</a></li>\n<li><a href=\"https://unikys.tistory.com/295\">https://unikys.tistory.com/295</a></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<ul>\n<li><a href=\"/2022/study-log/scope-chain/#%EC%A0%84%EC%97%AD-%EC%8A%A4%EC%BD%94%ED%94%84\">전역 스코프</a></li>\n<li><a href=\"/2022/study-log/scope-chain/#%EC%A7%80%EC%97%AD%ED%95%A8%EC%88%98-%EC%8A%A4%EC%BD%94%ED%94%84\">지역/함수 스코프</a></li>\n<li><a href=\"/2022/study-log/scope-chain/#%EB%B8%94%EB%A1%9D-%EC%8A%A4%EC%BD%94%ED%94%84\">블록 스코프</a></li>\n</ul>\n</li>\n<li><a href=\"/2022/study-log/scope-chain/#%EC%8A%A4%EC%BD%94%ED%94%84-%EC%B2%B4%EC%9D%B8\">스코프 체인</a></li>\n<li><a href=\"/2022/study-log/scope-chain/#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>","frontmatter":{"title":"scope-chain.md","date":"October 02, 2022","description":null,"tags":["javascript"],"cover":null}},"previous":{"fields":{"slug":"/2022/cypress-ci/"},"frontmatter":{"title":"Cypress CI 테스트 자동화 라이브러리 개발기"}},"next":{"fields":{"slug":"/2022/getting-started-with-vim/"},"frontmatter":{"title":""}}},"pageContext":{"id":"3c44a638-1eb2-560a-99f7-a854f7fa007e","previousPostId":"434b9581-92b4-51c6-b79c-e20107026cda","nextPostId":"2a3e2e5f-a0d5-574b-bb1a-550a2895447e"}},"staticQueryHashes":["1152384417","2706681444","3540528984"]}