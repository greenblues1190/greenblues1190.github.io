{"componentChunkName":"component---src-templates-blog-post-js","path":"/2021/how-to-install-homebrew-on-m1-mac/","result":{"data":{"site":{"siteMetadata":{"title":"Woo, Jeongmin"}},"markdownRemark":{"id":"823fe317-c6b1-563c-b594-db9c4f9d514c","excerpt":"애플 실리콘 맥에서 native Homebrew와 rosetta 2를 이용한 intel Homebrew를 설치하는 방법을 정리한 글입니다. soffes.blog/homebrew-on-apple-silicon를 참고하였습니다. 1. apple silicon native homebrew…","html":"<p>애플 실리콘 맥에서 native Homebrew와 rosetta 2를 이용한 intel Homebrew를 설치하는 방법을 정리한 글입니다. <a href=\"https://soffes.blog/homebrew-on-apple-silicon\">soffes.blog/homebrew-on-apple-silicon</a>를 참고하였습니다.</p>\n<hr>\n<h2>1. apple silicon native homebrew 설치</h2>\n<p>터미널을 열고 <code class=\"language-text\">/opt/homebrew</code> 폴더를 만들어 native homebrew를 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"command-line-prompt\"><span data-user=root data-host=localhost></span><span data-user=root data-host=localhost></span><span data-user=root data-host=localhost></span><span data-user=root data-host=localhost></span></span>$ <span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> -p /opt/homebrew\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">chown</span> -R<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">whoami</span><span class=\"token variable\">)</span></span>:staff /opt/homebrew\n$ <span class=\"token builtin class-name\">cd</span> /opt\n$ <span class=\"token function\">curl</span> -L https://github.com/Homebrew/brew/tarball/master <span class=\"token operator\">|</span> <span class=\"token function\">tar</span> xz --strip <span class=\"token number\">1</span> -C homebrew</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>이제 <code class=\"language-text\">./zshrc</code>에 환경변수를 설정해야한다. 초기 상태의 맥에 <code class=\"language-text\">~/.zshrc</code>가 없기 때문에 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"command-line-prompt\"><span data-user=root data-host=localhost></span><span data-user=root data-host=localhost></span></span><span class=\"token function\">touch</span> ~/.zshrc\n<span class=\"token function\">open</span> ~/.zshrc</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">.zshrc</code>를 열었으면 다음 내용을 작성 후 저장한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"command-line-prompt\"><span data-user=root data-host=localhost></span><span data-user=root data-host=localhost></span></span><span class=\"token comment\"># brew path</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"/opt/homebrew/bin:/usr/local/bin:<span class=\"token environment constant\">$PATH</span>\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h2>2. intel homebrew</h2>\n<p>다음은 x86_64 homebrew를 같이 쓰는 방법이다.</p>\n<p>터미널을 열고 Rosseta 2를 이용해 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"command-line-prompt\"><span data-user=root data-host=localhost></span></span>arch -x86_64 /bin/bash -c <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh<span class=\"token variable\">)</span></span>\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p><code class=\"language-text\">~/.zshrc</code>에 다음 내용을 작성 후 저장한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"command-line-prompt\"><span data-user=root data-host=localhost></span><span data-user=root data-host=localhost></span></span><span class=\"token comment\"># intel brew alias</span>\n<span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">ibrew</span><span class=\"token operator\">=</span><span class=\"token string\">'arch -x86_64 /usr/local/bin/brew'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>이제 brew로 native homebrew를, ibrew로 intel homebrew를 이용할 수 있다.</p>","frontmatter":{"title":"애플 실리콘 맥 Homebrew 설치 방법","date":"January 11, 2021","description":null,"tags":["M1 Mac","Homebrew"]}},"previous":{"fields":{"slug":"/2021/vscode-life-saving-shortcuts/"},"frontmatter":{"title":"VS Code Life-saving Shortcuts"}},"next":{"fields":{"slug":"/2021/error-log/20210125/"},"frontmatter":{"title":"[에러 로그] 'wasm code commit Allocation failed - process out of memory'"}}},"pageContext":{"id":"823fe317-c6b1-563c-b594-db9c4f9d514c","previousPostId":"e2be60f4-a314-5f5f-acce-5b3c1606f545","nextPostId":"517c0d6c-dfb9-5ddb-be64-c055dac5631e"}},"staticQueryHashes":["2841359383","3518605037"]}